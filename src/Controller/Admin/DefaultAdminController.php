<?php
/**
 * Created by PhpStorm.
 * User: temerso_test
 * Date: 25.05.2020
 * Time: 13:43
 */

namespace App\Controller\Admin;


use App\Classes\ShowAdmin\ShowModeFooterActionBuilder;
use Sonata\AdminBundle\Controller\CRUDController;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;

abstract class DefaultAdminController extends CRUDController
{
    protected function redirectTo($object)
    {
        $this->checkEntity($object);
        $request = $this->getRequest();
        if ($request->get(ShowModeFooterActionBuilder::BTN_CUSTOM_REDIRECT)) {
            $param = $request->get(ShowModeFooterActionBuilder::BTN_CUSTOM_REDIRECT);
            list($routerName, $routerQuery) = explode('|', $param);
            parse_str($routerQuery, $routerQueryArray);
            $url = $this->admin->generateObjectUrl($routerName, $object, $routerQueryArray);
            return new RedirectResponse($url);
        }

        return parent::redirectTo($object); // TODO: Change the autogenerated stub
    }

    private function checkEntity($object)
    {
        // Проверяем если в базе запись
        $class = get_class($object);
        $em = $this->getDoctrine()->getManager();
        $rep = $em->getRepository($class);
        try {
            $entity = $rep->find($object->getId());
            if(!$entity) {
                throw new NotFoundHttpException('Не удалось найти задачу. id:' . $object->getId() );
            }
        } catch (\Throwable $exception) {
            try {
                // Пытаемся создать запись
                $em->persist($object);
                $em->flush();
            } catch (\Throwable $exception) {
            }
        }
    }

}