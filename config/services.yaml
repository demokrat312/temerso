# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
imports:
    - { resource: services/sonata_services.yaml }
    - { resource: services/sonata_admin_services.yaml }
    - { resource: services/sonata_ref_services.yaml }


parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php,Admin,Application,Classes}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    mailer:
        alias: fos_user.mailer.noop
        public: true

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\EventListener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }
    App\EventListener\AuthExceptionListener:
        tags:
            - { name: kernel.event_listener, event: security.authentication.failure, method: onAuthenticationFailure }
    App\EventListener\EntityListener:
        tags:
            -   name: 'doctrine.event_listener'
                # this is the only required option for the lifecycle listener tag
                event: 'prePersist'

                # listeners can define their priority in case multiple listeners are associated
                # to the same event (default priority = 0; higher numbers = listener is run earlier)
                priority: 500

                # you can also restrict listeners to a specific Doctrine connection
                connection: 'default'
            -   name: 'doctrine.event_listener'
                # this is the only required option for the lifecycle listener tag
                event: 'preUpdate'

                # listeners can define their priority in case multiple listeners are associated
                # to the same event (default priority = 0; higher numbers = listener is run earlier)
                priority: 500

                # you can also restrict listeners to a specific Doctrine connection
                connection: 'default'

#    <service id="security.acl.permission_granting_strategy" class="Symfony\Component\Security\Acl\Domain\PermissionGrantingStrategy">
#    <call method="setAuditLogger">
#    <argument type="service" id="security.acl.audit_logger" on-invalid="ignore" />
#    </call>
#    </service>

    security.acl.permission_granting_strategy:
        class: App\Security\PermissionGrantingStrategy